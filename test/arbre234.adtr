type t = Leaf (int) | Node2 (t,t) | Node3 (t,t,t) | Node4 (t,t,t,t)

add (tree: t, newt: t) : t = rewrite tree {
  | Node2 (t1,t2) -> Node3(t1,t2,newt)
  | Node3 (t1,t2,t3) -> Node4(t1,t2,t3,newt)
  | Node4 (t1,t2,t3,t4) ->
    Node4(t1,t2,t3,Node2(t4,newt))
}
(*EXPECT
add (tree : tnewt : t) : t = rewrite tree {
  | (newt:t -- x → Layer(k0,.Node3-2))
    (t1:t -- Layer(k1,.Node2-0) → Layer(k1,.Node3-0))
    (t2:t -- Layer(k2,.Node2-1) → Layer(k2,.Node3-1))
  | (newt:t -- x → Layer(k3,.Node4-3))
    (t1:t -- Layer(k4,.Node3-0) → Layer(k4,.Node4-0))
    (t2:t -- Layer(k5,.Node3-1) → Layer(k5,.Node4-1))
    (t3:t -- Layer(k6,.Node3-2) → Layer(k6,.Node4-2))
  | (newt:t -- x → Layer(k7,.Node4-3.Node2-1))
    (t4[]:t -- Cell(.Node4-3.Node2-0^k11) → Cell(.Node4-3.Node2-0.Node2-0^k11))
    (t4.Node3-0:t -- Cell(.Node4-3.Node2-0^k11.Node3-0) → Cell(.Node4-3.Node2-0.Node2-0^k11.Node3-0))
    (t4.Node4-0:t -- Cell(.Node4-3.Node2-0^k11.Node4-0) → Cell(.Node4-3.Node2-0.Node2-0^k11.Node4-0))
    (t4.Leaf-0:int -- Cell(.Node4-3.Node2-0^k11.Leaf-0) → Cell(.Node4-3.Node2-0.Node2-0^k11.Leaf-0))
    (t4.Node2-1:t -- Layer(k12,.Node4-3.Node2-0^k11.Node2-1) → Layer(k12,.Node4-3.Node2-0.Node2-0^k11.Node2-1))
    (t4.Node3-1:t -- Layer(k13,.Node4-3.Node2-0^k11.Node3-1) → Layer(k13,.Node4-3.Node2-0.Node2-0^k11.Node3-1))
    (t4.Node3-2:t -- Layer(k14,.Node4-3.Node2-0^k11.Node3-2) → Layer(k14,.Node4-3.Node2-0.Node2-0^k11.Node3-2))
    (t4.Node4-1:t -- Layer(k15,.Node4-3.Node2-0^k11.Node4-1) → Layer(k15,.Node4-3.Node2-0.Node2-0^k11.Node4-1))
    (t4.Node4-2:t -- Layer(k16,.Node4-3.Node2-0^k11.Node4-2) → Layer(k16,.Node4-3.Node2-0.Node2-0^k11.Node4-2))
    (t4.Node4-3:t -- Layer(k17,.Node4-3.Node2-0^k11.Node4-3) → Layer(k17,.Node4-3.Node2-0.Node2-0^k11.Node4-3))
}

*)

