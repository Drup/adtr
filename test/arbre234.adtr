type t = Leaf (int) | Node2 (t,t) | Node3 (t,t,t) | Node4 (t,t,t,t)

add (tree: t, newt: t) : t = rewrite tree {
  | Node2 (t1,t2) -> Node3(t1,t2,newt)
  | Node3 (t1,t2,t3) -> Node4(t1,t2,t3,newt)
  | Node4 (t1,t2,t3,t4) ->
    Node4(t1,t2,t3,Node2(t4,newt))
}
(*EXPECT
add (tree : tnewt : t) : t = rewrite tree {
  | (newt:t | x → .t@2.φ^k0)
  | (newt:t | x → .t@3.φ^k3)
  | (newt:t | x → .t@3.t@1.φ^k7)
    (t4[]:t | .t@3.t@0^k11 → .t@3.t@0^(k11 + 1))
    (t4.int@0:int | .t@3.t@0^k11.int@0 → .t@3.t@0^(k11 + 1).int@0)
    (t4.t@1:t | .t@3.t@0^k11.t@1.φ^k12 → .t@3.t@0^(k11 + 1).t@1.φ^k12)
    (t4.t@2:t | .t@3.t@0^k11.t@2.φ^k13 → .t@3.t@0^(k11 + 1).t@2.φ^k13)
    (t4.t@3:t | .t@3.t@0^k11.t@3.φ^k14 → .t@3.t@0^(k11 + 1).t@3.φ^k14)
}

*)

