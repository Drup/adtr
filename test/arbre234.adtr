type t = Leaf (int) | Node2 (t,t) | Node3 (t,t,t) | Node4 (t,t,t,t)

add (tree: t, newt: t) : t = rewrite tree {
  | Node2 (t1,t2) -> Node3(t1,t2,newt)
  | Node3 (t1,t2,t3) -> Node4(t1,t2,t3,newt)
  | Node4 (t1,t2,t3,t4) ->
    Node4(t1,t2,t3,Node2(t4,newt))
}
(*EXPECT
add (tree : t, newt : t) : t = rewrite tree {
  | (newt₀:t | .t@2.φ^k₀ ← newt)
  | (newt₁:t | .t@3.φ^k₁ ← newt)
  | (newt₂:t | .t@3.t@1.φ^k₂ ← newt)
    (t4[]₀:t | .t@3.t@0^(k₃ + 1) ← .t@3.t@0^k₃)
    (t4.int@0₀:int | .t@3.t@0^(k₃ + 1).int@0 ← .t@3.t@0^k₃.int@0)
    (t4.t@1₀:t |
     .t@3.t@0^(k₃ + 1).t@1.φ^k₄ ←
     .t@3.t@0^k₃.t@1.φ^k₄)
    (t4.t@2₀:t |
     .t@3.t@0^(k₃ + 1).t@2.φ^k₅ ←
     .t@3.t@0^k₃.t@2.φ^k₅)
    (t4.t@3₀:t |
     .t@3.t@0^(k₃ + 1).t@3.φ^k₆ ←
     .t@3.t@0^k₃.t@3.φ^k₆)
}

Schedule: newt₀ -> ()
Schedule: newt₁ -> ()
Schedule: newt₂ -> (-1*k₂ + N!₀ + -2)
          t4.int@0₀ -> (-1*k₃ + N!₀ + -3)
          t4.t@1₀ -> (-1*k₄ + -1*k₃ + N!₀ + -3)
          t4.t@2₀ -> (-1*k₅ + -1*k₃ + N!₀ + -2)
          t4.t@3₀ -> (-1*k₆ + -1*k₃ + N!₀ + -3)
          t4[]₀ -> (-1*k₃ + N!₀ + -2)

*)
