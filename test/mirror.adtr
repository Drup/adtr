type tree = Leaf (int) | Node (tree,int,tree)

mirror (t:tree) : tree = rewrite t {
  | Leaf (i) -> Leaf (i)
  | Node (a,i,b) -> Node (b,i,a)
}
(*EXPECT
mirror (t : tree) : tree = rewrite t {
  | (i:int | Cell(.int@0) → Cell(.int@0))
  | (a:tree | Layer(k0,.tree@0) → Layer(k0,.tree@2))
    (b:tree | Layer(k1,.tree@2) → Layer(k1,.tree@0))
    (i:int | Cell(.int@1) → Cell(.int@1))
}

*)

mirror2 (t:tree) : tree = rewrite t {
  | Leaf (i) -> Leaf (i)
  | Node (a,i,Node(b1,j,b2)) -> Node (Node(b2,j,b1),i,a)
}
(*EXPECT

mirror2 (t : tree) : tree = rewrite t {
  | (i:int | Cell(.int@0) → Cell(.int@0))
  | (a:tree | Layer(k2,.tree@0) → Layer(k2,.tree@2))
    (b1:tree | Layer(k3,.tree@2.tree@0) → Layer(k3,.tree@0.tree@2))
    (b2:tree | Layer(k4,.tree@2.tree@2) → Layer(k4,.tree@0.tree@0))
    (i:int | Cell(.int@1) → Cell(.int@1))
    (j:int | Cell(.tree@2.int@1) → Cell(.tree@0.int@1))
}

*)

mirror3 (t:tree) : tree = rewrite t {
  | Leaf (i) -> Leaf (i)
  | Node (Node(a1,ia,a2),i,Node(b1,ib,b2)) ->
    Node (Node(b2,ib,b1),i,Node(a2,ia,a1))
}
(*EXPECT

mirror3 (t : tree) : tree = rewrite t {
  | (i:int | Cell(.int@0) → Cell(.int@0))
  | (a1:tree | Layer(k5,.tree@0.tree@0) → Layer(k5,.tree@2.tree@2))
    (a2:tree | Layer(k6,.tree@0.tree@2) → Layer(k6,.tree@2.tree@0))
    (b1:tree | Layer(k7,.tree@2.tree@0) → Layer(k7,.tree@0.tree@2))
    (b2:tree | Layer(k8,.tree@2.tree@2) → Layer(k8,.tree@0.tree@0))
    (i:int | Cell(.int@1) → Cell(.int@1))
    (ia:int | Cell(.tree@0.int@1) → Cell(.tree@2.int@1))
    (ib:int | Cell(.tree@2.int@1) → Cell(.tree@0.int@1))
}

*)

type tree3 = LeafX (int) | NodeX (tree,tree,tree)

mirror (t:tree3) : tree3 = rewrite t {
  | LeafX (i) -> LeafX (i)
  | NodeX (a,b,c) -> NodeX (c,a,b)
}
(*EXPECT

mirror (t : tree3) : tree3 = rewrite t {
  | (i:int | Cell(.int@0) → Cell(.int@0))
  | (a:tree | Layer(k9,.tree@0) → Layer(k9,.tree@1))
    (b:tree | Layer(k10,.tree@1) → Layer(k10,.tree@2))
    (c:tree | Layer(k11,.tree@2) → Layer(k11,.tree@0))
}

*)

