type t = Node (t,t)

erase1 (x:t) : t = rewrite x {
  | Node(Node (x, a),b) -> x
}
(*EXPECT
erase1 (x : t) : t = rewrite x {
  | (x[]:t | (.t@0.t@0)^(k₀ + 1) → (.t@0.t@0)^k₀)
    (x.t@0:t | (.t@0.t@0)^(k₀ + 1).t@0 → (.t@0.t@0)^k₀.t@0)
    (x.t@1:t |
     (.t@0.t@0)^(k₀ + 1).t@1.φ^k₁ →
     (.t@0.t@0)^k₀.t@1.φ^k₁)
    (x.t@0.t@1:t |
     (.t@0.t@0)^(k₀ + 1).t@0.t@1.φ^k₂ →
     (.t@0.t@0)^k₀.t@0.t@1.φ^k₂)
}

*)

erase2 (x:t) : t = rewrite x {
  | Node(Node (Node(x1,x2), a),b) -> Node(x1,x2)
}
(*EXPECT

erase2 (x : t) : t = rewrite x {
  | (x1[]:t | .t@0(.t@0.t@0)^(k₃ + 1) → .t@0(.t@0.t@0)^k₃)
    (x1.t@0:t | .t@0(.t@0.t@0)^(k₃ + 1).t@0 → .t@0(.t@0.t@0)^k₃.t@0)
    (x1.t@1:t |
     .t@0(.t@0.t@0)^(k₃ + 1).t@1.φ^k₄ →
     .t@0(.t@0.t@0)^k₃.t@1.φ^k₄)
    (x1.t@0.t@1:t |
     .t@0(.t@0.t@0)^(k₃ + 1).t@0.t@1.φ^k₅ →
     .t@0(.t@0.t@0)^k₃.t@0.t@1.φ^k₅)
    (x2:t | .t@0.t@0.t@1.φ^k₆ → .t@1.φ^k₆)
}

*)

erase3 (x:t) : t = rewrite x {
  | Node(Node (Node(Node(x1,x2),x3), a),b) -> Node(Node(x1,x2),x3)
}
(*EXPECT

erase3 (x : t) : t = rewrite x {
  | (x1[]:t | (.t@0.t@0)^(k₇ + 2) → (.t@0.t@0)^(k₇ + 1))
    (x1.t@0:t | (.t@0.t@0)^(k₇ + 2).t@0 → (.t@0.t@0)^(k₇ + 1).t@0)
    (x1.t@1:t |
     (.t@0.t@0)^(k₇ + 2).t@1.φ^k₈ →
     (.t@0.t@0)^(k₇ + 1).t@1.φ^k₈)
    (x1.t@0.t@1:t |
     (.t@0.t@0)^(k₇ + 2).t@0.t@1.φ^k₉ →
     (.t@0.t@0)^(k₇ + 1).t@0.t@1.φ^k₉)
    (x2:t | .t@0.t@0.t@0.t@1.φ^k₁₀ → .t@0.t@1.φ^k₁₀)
    (x3:t | .t@0.t@0.t@1.φ^k₁₁ → .t@1.φ^k₁₁)
}

*)

