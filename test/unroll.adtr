type t = Node (t,t)

erase1 (x:t) : t = rewrite x {
  | Node(Node (x, a),b) -> x
}
(*EXPECT
erase1 (x : t) : t = rewrite x {
  | (x[]:t | .t@0^2*k₀ ← .t@0^(2*k₀ + 2))
    (x.t@0:t | .t@0^(2*k₀ + 1) ← .t@0^(2*k₀ + 3))
    (x.t@1:t | .t@0^2*k₀.t@1.φ^k₁ ← .t@0^(2*k₀ + 2).t@1.φ^k₁)
    (x.t@0.t@1:t |
     .t@0^(2*k₀ + 1).t@1.φ^k₂ ←
     .t@0^(2*k₀ + 3).t@1.φ^k₂)
}

Schedule: x.t@0 -> (4*k₀ + N + -1)
          x.t@0.t@1 -> (-1*k₂ + 4*k₀ + N + -4)
          x.t@1 -> (0*k₁ + 6*k₀ + 0*N)
          x[] -> (4*k₀ + N)

*)

erase2 (x:t) : t = rewrite x {
  | Node(Node (Node(x1,x2), a),b) -> Node(x1,x2)
}
(*EXPECT
erase2 (x : t) : t = rewrite x {
  | (x1[]:t | .t@0^(2*k₃ + 1) ← .t@0^(2*k₃ + 3))
    (x1.t@0:t | .t@0^(2*k₃ + 2) ← .t@0^(2*k₃ + 4))
    (x1.t@1:t |
     .t@0^(2*k₃ + 1).t@1.φ^k₄ ←
     .t@0^(2*k₃ + 3).t@1.φ^k₄)
    (x1.t@0.t@1:t |
     .t@0^(2*k₃ + 2).t@1.φ^k₅ ←
     .t@0^(2*k₃ + 4).t@1.φ^k₅)
    (x2:t | .t@1.φ^k₆ ← x2:.t@0.t@0.t@1.φ^k₆)
}

Schedule: x1.t@0 -> (2*k₃ + 0*N)
          x1.t@0.t@1 -> (0*k₅ + 2*k₃ + 0*N)
          x1.t@1 -> (0*k₄ + 2*k₃ + 0*N + 1)
          x1[] -> (2*k₃ + 0*N + 1)
          x2 -> (0*k₆ + 0*N)

*)

erase3 (x:t) : t = rewrite x {
  | Node(Node (Node(Node(x1,x2),x3), a),b) -> Node(Node(x1,x2),x3)
}
(*EXPECT
erase3 (x : t) : t = rewrite x {
  | (x1[]:t | .t@0^(2*k₇ + 2) ← .t@0^(2*k₇ + 4))
    (x1.t@0:t | .t@0^(2*k₇ + 3) ← .t@0^(2*k₇ + 5))
    (x1.t@1:t |
     .t@0^(2*k₇ + 2).t@1.φ^k₈ ←
     .t@0^(2*k₇ + 4).t@1.φ^k₈)
    (x1.t@0.t@1:t |
     .t@0^(2*k₇ + 3).t@1.φ^k₉ ←
     .t@0^(2*k₇ + 5).t@1.φ^k₉)
    (x2:t | .t@0.t@1.φ^k₁₀ ← x2:.t@0.t@0.t@0.t@1.φ^k₁₀)
    (x3:t | .t@1.φ^k₁₁ ← x3:.t@0.t@0.t@1.φ^k₁₁)
}

Schedule: x1.t@0 -> (4*k₇ + N + -5)
          x1.t@0.t@1 -> (0*k₉ + 6*k₇ + 0*N)
          x1.t@1 -> (-1*k₈ + 4*k₇ + N + -3)
          x1[] -> (4*k₇ + N + -2)
          x2 -> (0*k₁₀ + 0*N)
          x3 -> (0*k₁₁ + 0*N)

*)
